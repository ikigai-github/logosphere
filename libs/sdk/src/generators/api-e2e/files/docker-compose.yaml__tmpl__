version: '3.9'

services:
<% applications.forEach(function(application){ %>
  <%= application.name %>:
    image: ${DOCKER_ORG}/<%= application.name %>:latest
    build:
      context: .
      dockerfile: ./<%= application.path %>/Dockerfile
    depends_on:
      - fluree-ledger
      - blockfrost 
    ports:
      - <%= application.port %>:3000
    environment:
      FLUREE_URL: ${FLUREE_URL}
      FLUREE_LEDGER: local/<%= application.name %>-e2e
      FLUREE_AUTO_UPDATE_SCHEMA: ${FLUREE_AUTO_UPDATE_SCHEMA}
      FLUREE_ROOT_PRIVATE_KEY: ${FLUREE_ROOT_PRIVATE_KEY}
      FLUREE_OPEN_API: ${FLUREE_OPEN_API}
      CARDANO_WALLET_URL: ${CARDANO_WALLET_URL}
      CARDANO_WALLET_ID: ${CARDANO_WALLET_ID}
      CARDANO_WALLET_MNEMONIC: ${CARDANO_WALLET_MNEMONIC}
      CARDANO_WALLET_ADDRESS: ${CARDANO_WALLET_ADDRESS}    
<% }); %> 

  fluree-ledger:
    image: fluree/ledger:1.0.3
    ports:
      - 8090:8090
    volumes:
      - fluree-data:/var/lib/fluree
      
  postgres:
    image: postgres:11.5-alpine
    environment:
      - POSTGRES_LOGGING=true
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - 5432:5432
    volumes:
      - postgres:/var/lib/postgresql/data
    restart: on-failure
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"    

  cardano-node:
    image: inputoutput/cardano-node:1.35.4
    environment:
      - NETWORK=${CARDANO_NETWORK}
    ports:
      - 3001:3001
    volumes:
      - node-db:/data
      - node-ipc:/ipc
    restart: on-failure
    healthcheck:
      test: ["CMD-SHELL", "curl -f 127.0.0.1:12788 || exit 1"]
      interval: 60s
      timeout: 10s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

  cardano-db-sync:
    image: inputoutput/cardano-db-sync:13.0.5-extra-args
    environment:
      - NETWORK=${CARDANO_NETWORK}
      - POSTGRES_HOST=${DB_HOST_NAME}
      - POSTGRES_PORT=${DB_PORT_NUMBER}
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - RESTORE_SNAPSHOT=${RESTORE_SNAPSHOT:-}
      - RESTORE_RECREATE_DB=N
      - EXTRA_DB_SYNC_ARGS=${EXTRA_DB_SYNC_ARGS:-}
    ports:
      - 3002:3002
    depends_on:
      cardano-node:
        condition: service_healthy
      postgres:
        condition: service_healthy
    volumes:
      - db-sync-data:/var/lib/cexplorer
      - node-ipc:/node-ipc
    restart: on-failure
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

  blockfrost:
    image: blockfrost/backend-ryo:latest
    command:
      - /bin/sh
      - -c 
      - $$(nix-build -A blockfrost-backend --no-out-link)/bin/blockfrost-backend
    environment:
      - BLOCKFROST_CONFIG_DBSYNC_HOST=${DB_HOST_NAME}
      - BLOCKFROST_CONFIG_SERVER_LISTEN_ADDRESS=${BLOCKFROST_LISTEN_ADDRESS}
      - NODE_APP_INSTANCE=default
      - BLOCKFROST_CONFIG_DBSYNC_USER=${DB_USER}
      - BLOCKFROST_CONFIG_DBSYNC_DATABASE=${DB_NAME}
      - PGPASSWORD=${DB_PASSWORD}
      - BLOCKFROST_CONFIG_NETWORK=${CARDANO_NETWORK}
    ports:
      - 3000:3000
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ${DOCKER_VOLUMES_PATH}/blockfrost-config:/app/config
    restart: on-failure
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

volumes:
  fluree-data:
  db-sync-data:
  postgres:
  node-db:
  node-ipc:  
